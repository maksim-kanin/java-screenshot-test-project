plugins {
    id 'java'
    id "io.qameta.allure" version "2.9.6"
    id "io.freefair.aspectj.post-compile-weaving" version "6.4.1"
}

group 'ai.neuraloom'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def JUNIT = "5.8.2"
def SELENIDE = "6.4.0"
def OWNER = "1.0.12"
def ASHOT = "1.5.4"
def ASSERTJ = "3.21.0"
def ASPECTJ = "1.9.2"
def FREEMARKER = "2.3.31"

dependencies {
    implementation("org.junit.jupiter:junit-jupiter:$JUNIT",
            "org.junit.jupiter:junit-jupiter-engine:$JUNIT",
            "com.codeborne:selenide:$SELENIDE",
            "org.aeonbits.owner:owner:$OWNER",
            "ru.yandex.qatools.ashot:ashot:$ASHOT",
            "org.assertj:assertj-core:$ASSERTJ",
            "org.aspectj:aspectjweaver:$ASPECTJ",
            "org.aspectj:aspectjrt:$ASPECTJ",
            "org.freemarker:freemarker:$FREEMARKER")
}

allure {
    report {
        version.set("2.17.3")
    }
    adapter {
        frameworks {
            junit5 {
                adapterVersion.set("2.17.3")
            }
        }
    }
}

def CL_DIR = "${buildDir}/allure/commandline"
def BIN_DIR = "$CL_DIR/bin"

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()
    systemProperties += [
            'junit.jupiter.execution.parallel.enabled'             : true,
            'junit.jupiter.execution.parallel.mode.default'        : 'concurrent',
            'junit.jupiter.execution.parallel.mode.classes.default': 'concurrent',
            'junit.jupiter.execution.parallel.config.strategy'     : 'custom',
            'junit.jupiter.execution.parallel.config.custom.class' : 'com.neuraloom.ui.browser.CustomStrategy',
            'allure.results.directory'                             : "$BIN_DIR/allure-results"
    ]
}

task deleteAllure(type: Delete) {
    delete "$BIN_DIR/allure-results"
    delete "$BIN_DIR/report"
}

task copyGitHubPlugin(type: Exec) {
    def pluginsDir = "$CL_DIR/plugins"
    commandLine 'sh', '-c', "mkdir -p $pluginsDir && " +
            "tar -xf github-plugin.tar -C $pluginsDir && " +
            "echo '\n  - github-plugin' >> $CL_DIR/config/allure.yml"
}

task buildAllureReport(type: Exec) {
    workingDir "$BIN_DIR"
    commandLine 'sh', '-c', './allure generate -o report --clean'
}

testClasses.finalizedBy(deleteAllure)